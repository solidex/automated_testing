  - name: "Get host access restrictions configuration"
### First grep 'trusthost', then capture everything from column 11 till end of line 
    local_action: shell cat templates/utm/get-host-secure-access.j2 | ssh {{ ansible_user }}@{{ ansible_host }} -p {{ ansible_port }} | grep trusthost | cut -d' ' -f11-
    register: result

  - name: "Access configured?"
    set_fact: 
      access_configured: "{{result.stdout}}"

  - name: "Format access list"
    set_fact: 
      access_subnets_list: "{{result.stdout_lines | map ('regex_replace', '^([0-9].*) ([0-9].*)$','\\1/\\2') | ipaddr | list }}"
    when: result.stdout != ''

#  - name: "Print acl"
#    debug: msg="{{access_subnets_list}}"

#  - name: "Get restriction access information"
#    fortiosconfig:
##     action: "ssh"
#     host:  "{{ ansible_host }}:{{ansible_https_port}}" 
#     username: "{{  ansible_user}}"  
#     password: "{{ ansible_ssh_pass }}"
#     vdom: "global"
#     config_parameters:
#       name: "global"
#     commands: |
#               config global
#               get system status
#    register: result
#    connection: local

#    fortiosconfig:
#     config: "system admin"
#     action: "get"
#     host:  "{{ ansible_host }}:{{ansible_https_port}}"  
#     username: "{{ ansible_user }}"  
#     password: "{{ansible_ssh_pass}}"
#     vdom: "global"
#    config_parameters:
#       name: "global"
#    connection: local
#    register: result

  - name: "Print"
    debug: msg="{{result}}"
#    debug: msg="{{item.server}}"
#    with_dict: result.meta.results.ntpserver[0]
